doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    link(rel='apple-touch-icon', sizes='76x76', href='/assets/paperDashboardPro/img/apple-icon.png')
    link(rel='icon', type='image/png', sizes='96x96', href=`/upload/${reqSession.utilities[0].company_logo}`)
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    title #{reqSession.utilities[0].company_name}
    meta(property='og:site_name', content='Creative Tim')
    // Bootstrap core CSS
    link(href='/assets/paperDashboardPro/css/bootstrap.min.css', rel='stylesheet')
    // Paper Dashboard core CSS
    link(href='/assets/paperDashboardPro/css/paper-dashboard.css', rel='stylesheet')
    // CSS for Demo Purpose, don't include it in your project
    link(href='/assets/paperDashboardPro/css/demo.css', rel='stylesheet')
    // Fonts and icons
    link(href='http://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css', rel='stylesheet')
    link(href='https://fonts.googleapis.com/css?family=Muli:400,300', rel='stylesheet', type='text/css')
    link(href='/assets/paperDashboardPro/css/themify-icons.css', rel='stylesheet')
    link(href='/assets/paperDashboardPro/css/select2.min.css', rel='stylesheet')
    style.
      button.hello{
        background:none!important;
        border:none; 
        padding:0!important;
        
        /*optional*/
        font-family:arial,sans-serif; /*input has OS specific font-family*/
        color:#069;
        text-decoration:underline;
        cursor:pointer;
      }
      
      .dropdown-menu {
        margin-left: -110px !important;
      }
      #checkout > div > div > div.modal-body > div:nth-child(5) > div:nth-child(2) > div > span > span.selection > span {
        background-color: rgb(243, 242, 238) !important;
        border: 0 !important;
        width: 190%;

      }
      
  body.sidebar-mini
    .wrapper
      .sidebar(data-active-color='spa', style='color: white')
        //
          Tip 1: you can change the color of the sidebar's background using: data-background-color="white | brown"
          Tip 2: you can change the color of the active button using the data-active-color="primary | info | success | warning | danger"
        .logo
          a.simple-text.logo-mini(href='#')
            | 
          a.simple-text.logo-normal(href='#')
            | MBAY Health Spa
        .sidebar-wrapper
          .user
            .info
              .photo
                img(src='/assets/paperDashboardPro/img/icon.jpg')
              a.collapsed(data-toggle='collapse', href='#collapseExample')
                span
                  | Front Desk
              .clearfix
          ul.nav
            li
              a(href='/frontdesk/home')
                i.ti-pencil
                p
                  | Registration
            li
              a(href='/fdReservation')
                i.ti-calendar
                p
                  | Reservation
            li.active
              a(href='/payment')
                i.ti-credit-card
                p
                  | Payment
            li
              a(href='./therapist')
                i.ti-user
                p
                  | Therapist Attendance   
            li
              a(href='./giftcert')
                i.ti-gift
                p
                  | Gift Certification
      .main-panel
        nav.navbar.navbar-default
          .container-fluid
            .navbar-minimize
              button#minimizeSidebar.btn.btn-fill.btn-icon
                i.ti-more-alt
            .navbar-header
              button.navbar-toggle(type='button')
                span.sr-only Toggle navigation
                span.icon-bar.bar1
                span.icon-bar.bar2
                span.icon-bar.bar3
              a.navbar-brand(href='#Dashboard')
                | Payment
            .collapse.navbar-collapse
              ul.nav.navbar-nav.navbar-right
                li
                  a.btn-rotate(href='#settings')
                    i.ti-settings
                    p.hidden-md.hidden-lg
                      | Settings
        .content
          .container-fluid
            .row
              .col-md-12
                .card
                  .row
                    div
                      .card-content
                        
                  .content
                    .container-fluid
                      .row
                        .col-md-12
                          p.category  
                          br
                          .card
                            .card-content
                              .nav-tabs-navigation
                                .nav-tabs-wrapper
                                  ul#tabs.nav.nav-tabs(data-tabs='tabs')
                                    li.active
                                      a(href='#reservation', data-toggle='tab') Reservation
                                    li
                                      a(href='#amenities', data-toggle='tab') Amenity
                                    li
                                      a(href='#loyalty', data-toggle='tab') Loyalty Membership 
                              #my-tab-content.tab-content
                                //-  RESERVATION TAB
                                #reservation.tab-pane.active        
                                  .toolbar
                                  center
                                    h2 Unpaid Customers
                                  .fresh-datatables
                                    table#datatablesReservation.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      thead
                                        tr
                                          th Name
                                          th.disabled-sorting
                                          th 
                                          th Status
                                          th.disabled-sorting Actions
                                      tfoot
                                        tr
                                          th Name
                                          th
                                          th 
                                          th Status
                                          th Actions
                                      tbody
                                        each notpaid in notpaids
                                          tr
                                            td= notpaid.cust_fname+' '+notpaid.cust_mname+' '+notpaid.cust_lname
                                              input.name(type='' value=`${notpaid.cust_fname} ${notpaid.cust_mname} ${notpaid.cust_lname}` id=`${notpaid.walkin_id}`)
                                            td
                                            td
                                            td
                                            if(notpaid.walkin_indicator==1)
                                              td
                                                button.btn.btn-simple.btn-warning.amenityButton( value='' style="margin-right: 15px")
                                                    span.btn-label
                                                    i.fa.fa-bed
                                                    |  Inservice
                                            else if(notpaid.walkin_indicator== 0 && 1)
                                            td 
                                              .dropdown
                                                    button.btn.btn-simple.btn-info.btn-rotate(href='#', data-toggle='dropdown' )
                                                      i.ti-settings
                                                    ul.dropdown-menu
                                                      li
                                                        button.btn.btn-simple.btn-info.checkoutButton(type='button' value=`${notpaid.walkin_id}`)
                                                          span.btn-label
                                                          i.ti-calendar
                                                          |  Pay Now
                                                      li
                                                        button.btn.btn-simple.btn-info.reserveButton(data-toggle='modal')
                                                          span.btn-label
                                                          i.ti-eye
                                                          | Details   
                                  br
                                  br
                                  center
                                    h2 Paid Customers
                                  .fresh-datatables
                                    table#datatablesReservation2.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      thead
                                        tr
                                          th Name
                                          th 
                                          th.disabled-sorting Status
                                          th.disabled-sorting Actions
                                          
                                      tfoot
                                        tr
                                          th Name
                                          th 
                                          th Status
                                          th Actions
                                          

                                      tbody
                                        each paid in paids
                                          tr
                                            td=paid.cust_fname+' '+paid.cust_mname+' '+paid.cust_lname
                                            td
                                            if(paid.walkin_payment_status == 1 && paid.walkin_indicator==2)
                                              td
                                            else if(paid.walkin_payment_status == 1 && paid.walkin_indicator==1)
                                              td
                                                button.btn.btn-simple.btn-warning.amenityButton( value='' style="margin-right: 15px")
                                                  span.btn-label
                                                  i.fa.fa-bed
                                                  |  Inservice
                                            else if(paid.walkin_payment_status == 1 && paid.walkin_indicator==0)
                                              td 
                                                button.btn.btn-simple.btn-warning( value='' style="margin-right: 15px")
                                                  span.btn-label
                                                  |  Queue
                                            td
                                              if(paid.walkin_payment_status == 1 && paid.walkin_indicator ==0)
                                                  .dropdown
                                                    button.btn.btn-simple.btn-info.btn-rotate(href='#', data-toggle='dropdown' )
                                                      i.ti-settings
                                                    ul.dropdown-menu
                                                      li
                                                        button.btn.btn-simple.btn-info.reserveButton(data-toggle='modal')
                                                          span.btn-label
                                                          i.ti-calendar
                                                          |  Refund
                            
                                //- AMENITIES TAB
                                #amenities.tab-pane    
                                  .toolbar
                                    center
                                      h2 Unpaid Customers
                                  .fresh-datatables
                                    table#datatablesAmenity.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      thead
                                        tr
                                          th Name
                                          th Membership Type
                                          th Date
                                          th.disabled-sorting Total Guest
                                          th.disabled-sorting Total
                                          th.disabled-sorting Actions
                                      tfoot
                                        tr
                                          th Name
                                          th Membership Type
                                          th Date
                                          th Total Guest
                                          th Total 
                                          th Actions
                                      tbody
                                        each amenity in amenities
                                          if(amenity.paid_status==0)
                                            tr
                                              td= amenity.cust_fname+' '+amenity.cust_mname+' '+amenity.cust_lname
                                                input.amenityName(type='' value=`${amenity.cust_fname} ${amenity.cust_mname} ${amenity.cust_lname}` id=`${amenity.cust_id}`)
                                                input.amenityId(type='' value=`${amenity.amenity_reservation_id}` id=`${amenity.cust_id}`)
                                              if(amenity.cust_type==1)
                                                td Loyalty
                                              else
                                                td Common
                                              td= amenity.date
                                              td= amenity.number_ofGuest
                                                input.number_guest(type='' value=`${amenity.number_ofGuest}` id=`${amenity.cust_id}`)
                                              td= '₱'+amenity.total_fee
                                                input.total_fee(type='' value=`${amenity.total_fee}` id=`${amenity.cust_id}`)
                                              td
                                                .dropdown(style="right: 10px")
                                                    button.btn.btn-simple.btn-info.btn-rotate(href='#', data-toggle='dropdown' style='left: auto; right: 5px')
                                                      i.ti-settings
                                                    ul.dropdown-menu
                                                      li
                                                        button.btn.btn-simple.btn-info.payNowAmenityButton(data-toggle='modal', value=`${amenity.cust_id}`  style="margin-right: 15px")
                                                          span.btn-label
                                                          i.ti-calendar
                                                          |  Pay Now          
                                  hr
                                  br
                                  br
                                  .toolbar
                                    center
                                      h2 Paid Customers
                                  .fresh-datatables
                                    table#datatablesAmenity2.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      thead
                                        tr
                                          th Name
                                          th Membership Type
                                          th Date
                                          th.disabled-sorting Total Guest
                                          th.disabled-sorting Total
                                          th.disabled-sorting Actions
                                      tfoot
                                        tr
                                          th Name
                                          th Membership Type
                                          th Date
                                          th Total Guest
                                          th Total 
                                          th Actions

                                      tbody
                                        each amenity in amenities
                                          if(amenity.paid_status==1)
                                            tr
                                              td= amenity.cust_fname+' '+amenity.cust_mname+' '+amenity.cust_lname
                                                input.amenityId(type='' value=`${amenity.amenity_reservation_id}` id=`${amenity.cust_id}`)
                                              if(amenity.cust_type==1)
                                                td Loyalty
                                              else
                                                td Common
                                              td= amenity.date
                                                input.date(type='' value=`${amenity.date}` id=`${amenity.cust_id}`)
                                              td= amenity.number_ofGuest
                                              td= '₱'+amenity.total_fee
                                              td   
                                                .dropdown(style="right: 10px")
                                                      button.btn.btn-simple.btn-info.btn-rotate(href='#', data-toggle='dropdown' style='left: auto; right: 5px')
                                                        i.ti-settings
                                                      ul.dropdown-menu
                                                        li
                                                          button.btn.btn-simple.btn-info.amenityRefundButton(data-toggle='modal', value=`${amenity.cust_id}`  style="margin-right: 15px")
                                                            span.btn-label
                                                            i.ti-calendar
                                                            |  Refund    
                                //- LOYALTY TAB
                                #loyalty.tab-pane      
                                  .toolbar
                                    center
                                      h2 Unpaid Customers
                                  .fresh-datatables
                                    table#datatablesLoyalty.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      thead
                                        tr
                                          th Name
                                          th.disabled-sorting
                                          th.disabled-sorting
                                          th.disabled-sorting Actions
                                      tfoot
                                        tr
                                          th Name
                                          th 
                                          th 
                                          th Actions
                                      tbody
                                        each loyalty in loyaltys
                                          tr
                                            td= loyalty.cust_fname+' '+loyalty.cust_mname+' '+loyalty.cust_lname
                                              input.loyalty_name(type='' value=`${loyalty.cust_fname} ${loyalty.cust_mname} ${loyalty.cust_lname}` id=`${loyalty.member_id}`)
                                            td
                                            td
                                            td
                                              .dropdown(style="right: 10px")
                                                    button.btn.btn-simple.btn-info.btn-rotate(href='#', data-toggle='dropdown' style='left: auto; right: 5px')
                                                      i.ti-settings
                                                    ul.dropdown-menu
                                                      li
                                                        button.btn.btn-simple.btn-info.payNowButton(data-toggle='modal', value=`${loyalty.member_id}` style="margin-right: 15px")
                                                          span.btn-label
                                                          i.ti-calendar
                                                          |  Pay Now
                                            

                                
                                //- br
                                //- br
                                //- center
                                //-   h2 Paid Customers
                                //- .fresh-datatables
                                //-   table#datatables3.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                //-     thead
                                //-       tr
                                //-         th Membership Type
                                //-         th Name
                                //-         th.disabled-sorting
                                //-         th.disabled-sorting
                                //-         th Services
                                //-     tfoot
                                //-       tr
                                //-         th Membership Type
                                //-         th Name
                                //-         th
                                //-         th
                                //-         th Services

                                //-     tbody
                                //-       each paid in paids
                                //-         tr
                                //-           if(paid.cust_type==0)
                                //-             td Common
                                //-           else
                                //-             td Loyalty
                                //-           td= paid.cust_fname+" "+paid.cust_lname
                                //-           td
                                //-           td
                                //-           td
                                //-             if(paid.walkin_payment_status== 2)
                                //-               button.btn.btn-info.btn-fill.btn-wd.viewButton(type='button' value=`${paid.walkin_id}`)
                                //-                   span.btn-label
                                //-                   | Refund
                                //-             else
                                //-               button.btn.btn-info.btn-fill.btn-wd.viewButton(type='button' value=`${paid.walkin_id}`)
                                //-                 span.btn-label
                                //-                 | View 

                  
                  
                  
                              #viewDetails.modal.fade(tabindex='-1', role='dialog')
                                .modal-dialog(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Reservation Details
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      p reservation details
                                    .modal-footer
                                      // <button type="button" class="btn btn-secondary pull-left btn btn-info btn-fill btn-wd" ></button>
                                      button.btn.btn-secondary.btn.btn-danger.btn-fill.btn-wd(type='button', data-dismiss='modal') Close
                              
                              
                              #RegisterModal.modal.fade(tabindex='1', role='dialog' aria-labelledby='myModalLabel')
                                .modal-dialog(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Registration
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      .row
                                        .col-md-4
                                          .form-group
                                            label.control-label Username
                                            star *
                                            input.form-control(type='text', name='username', id="username" placeholder='username\
                                            ')
                                        .col-md-4
                                          .form-group
                                            label.control-label Password
                                            star *
                                            input.form-control(type='password', name='password1', id="password" placeholder='password\
                                            ')
                                        .col-md-4
                                          .form-group
                                            label.control-label Re-enter Password
                                            star *
                                            input.form-control(type='password', name='password2', id="password2" placeholder='confim password\
                                            ')

                                      .row
                                        .col-md-5
                                            h5 Fee: ₱#{reqSession.utilities[0].membership_fee}
                                    .modal-footer
                                      button.btn.btn-secondary.btn.btn-info.btn-fill.btn-wd.pull-right.buttonRegister(type='button', data-dismiss='modal') Done
                                      button.btn.btn-secondary.btn.btn-danger.btn-fill.btn-wd.pull-left(type='button', data-dismiss='modal') Close
                              
                              
                              #checkout.modal.fade(role='dialog' aria-labelledby='myModalLabel')
                                .modal-dialog.modal-lg(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Summary
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      div
                                        h5
                                          strong#custName
                                          input.paid_stats(type='' value='')
                                          input.walkin_id(type="" value="")
                                          input.customer_id(type="" value="")
                                          input.cust_type(type="" value="")
                                          input.vat_exempt_custHidden(type='' value="")
                                          br
                                          button.hello(type='' value='') Register for Loyalty Membership
                                        h5
                                          strong#Room
                                          br
                                          strong#RoomRate
                                          br
                                          strong#ReservationDate
                                          br
                                          strong#ReservationTime
                                          hr
                                      .row#Services
                                        .fresh-datatables
                                          table#datatablesCheckout.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                            thead
                                              tr
                                                th.disabled-sorting
                                                  strong Services Availed 
                                                th.disabled-sorting Quantity
                                                th.disabled-sorting Amount
                                                th.disabled-sorting Equivalent Points
                                            tfoot
                                              tr
                                                th.disabled-sorting
                                                th
                                                th
                                                th
                                            tbody#viewServicesAvailedService
                                      //- .row#Promo
                                      //-   .fresh-datatables
                                      //-     table#datatablesCheckout.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      //-       thead
                                      //-         tr
                                      //-           th.disabled-sorting
                                      //-             strong Promobundle Availed 
                                      //-           th.disabled-sorting Quantity
                                      //-           th.disabled-sorting Amount
                                      //-           th.disabled-sorting Equivalent Points
                                      //-       tfoot
                                      //-         tr
                                      //-           th.disabled-sorting
                                      //-           th
                                      //-           th
                                      //-           th
                                      //-       tbody#viewServicesAvailedPromo
                                      //- .row#Package
                                      //-   .fresh-datatables
                                      //-     table#datatablesCheckout.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                      //-       thead
                                      //-         tr
                                      //-           th.disabled-sorting
                                      //-             strong Package Availed 
                                      //-           th.disabled-sorting Quantity
                                      //-           th.disabled-sorting Amount
                                      //-           th.disabled-sorting Equivalent Points
                                      //-       tfoot
                                      //-         tr
                                      //-           th.disabled-sorting
                                      //-           th
                                      //-           th
                                      //-           th
                                      //-       tbody#viewServicesAvailedPackage
                                      .row
                                        .col-md-7
                                        .col-md-4
                                          h3
                                            strong#TotalPrice
                                            input.totalPrice(type='' value='')
                                            br
                                            strong Balance: 
                                              a#AmountNeeded
                                            input.amountNeeded(type='' value='')
                                          h5
                                            strong#TotalPoints
                                            input.totalAmountPoints(type='' value='')
                                            input.totalAmountReceived(type='' value='')
                                        
                                      hr
                                      .row
                                        .col-md-3#appendDito
                                        input.currentPoints(type='' value='')
                                        input.newPoints(type='' value='')
                                        .col-md-3
                                          .form-group.has-default.bmd-form-group
                                            .row
                                              .col-md-1
                                                input.checkboxGC(type='checkbox' id='checkbox_gc' value='')
                                              .col-md-6(style="width: 69%;")
                                                .category#totalGCval
                                              .col-md-5(style="width: 69%;")
                                                label(for='checkbox_gc') Gift Certificate
                                            select#id_label_multiple.js-example-basic-multiple.js-states.form-control.selectpickerGc(data-style='btn-info', multiple ='multiple' disabled='disabled' style="width: 77%;margin-left: -8px;")
                                              each gc in giftcerts
                                                option(value=`${gc.gc_id}` gc_value=`${gc.gc_value}`)= gc.gc_refCode+" "+gc.gc_name
                                            //- select.selectpicker.selectpickerGc(title='Select Gift Certificate', multiple data-style='btn-info', data-size='7' name='giftcert' data-id='giftcert' required='true' aria-label='true' disabled='disabled')
                                            //-   each gc in giftcerts
                                            //-     option(value=`${gc.gc_id}` gc_value=`${gc.gc_value}`)= gc.gc_refCode+" "+gc.gc_name
                                        
                                            input.gcTotal(type='' value='0')
                                        .col-md-3
                                          .form-group.has-default.bmd-form-group
                                              label Amount Received:
                                              .input-group
                                                span.input-group-addon ₱  
                                                input.form-control.amountReceived(type='number', placeholder='Amount Received')
                                                
                              
                                        .col-md-3
                                          .form-group.has-default.bmd-form-group
                                            label Change: 
                                            .input-group
                                              span.input-group-addon ₱
                                              input.form-control.change(type='number', placeholder='Change' value='0' disabled)
                                              
                                      .modal-footer
                                        button.btn.btn-secondary.pull-right.btn.btn-success.btn-fill.btn-wd.buttonDone(type='button') Done
                                        button.btn.btn-secondary.pull-left.btn.btn-danger.btn-fill.btn-wd(type='button', data-dismiss='modal') Cancel
                              
                              
                              
                              
                              
                              
                              
                              // PAYNOW
                              #payment.modal.fade(tabindex='-1', role='dialog' aria-labelledby='myModalLabel')
                                .modal-dialog(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Summary
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      .row
                                        .col-md-8
                                          h4
                                            strong Name: 
                                              a#customerName
                                      hr
                                      .row
                                        .col-md-10
                                          p Registration for Loyalty Membership
                                      .row
                                        .col-md-4
                                        .col-md-6
                                          h3
                                            strong#TotalLoyaltyPrice
                                            input.totalLoyaltyPrice(type='' value='')

                                      hr
                                      .row
                                        .col-md-5
                                          .form-group.has-default.bmd-form-group
                                            label Amount Received:
                                            .input-group
                                              span.input-group-addon ₱  
                                              input.form-control.amountLoyaltyReceived(type='number', placeholder='Amount Received')
                                              
                                        
                                        .col-md-5
                                          .form-group.has-default.bmd-form-group
                                            label Change: 
                                            .input-group
                                              span.input-group-addon ₱ 
                                              input.form-control.changeLoyalty(type='number', placeholder='Change' value='0' disabled)
                                              
                                      .modal-footer
                                        button.btn.btn-secondary.pull-right.btn.btn-success.btn-fill.btn-wd.buttonDoneLoyalty(type='button') Done
                                        button.btn.btn-secondary.pull-left.btn.btn-danger.btn-fill.btn-wd(type='button', data-dismiss='modal') Cancel
                              
                              
                              
                              // PAYNOW AMENITY
                              #paynowAmenity.modal.fade(tabindex='-1', role='dialog' aria-labelledby='myModalLabel')
                                .modal-dialog(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Summary
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      .row
                                        .col-md-10
                                          h4
                                            strong Name: 
                                              a#Name
                                      hr
                                      .row
                                        .col-md-10
                                          h4 Total Guest: 
                                              a#EntranceFee
                                                strong#numberOfGuest 
                                      .row
                                        .col-md-4
                                        .col-md-6
                                          h3
                                            strong#TotalAmenityPrice
                                            input.totalAmenityPrice(type='' value='')

                                      hr
                                      .row
                                        .col-md-5
                                          .form-group.has-default.bmd-form-group
                                            label Amount Received:
                                            .input-group
                                              span.input-group-addon ₱  
                                              input.form-control.amountAmenityReceived(type='number', placeholder='Amount Received')
                                             
                                        
                                        .col-md-5
                                          .form-group.has-default.bmd-form-group
                                            label Change: 
                                            .input-group
                                              span.input-group-addon ₱ 
                                              input.form-control.changeAmenity(type='number', placeholder='Change' value='0' disabled)
                                             
                                      .modal-footer
                                        button.btn.btn-secondary.pull-right.btn.btn-success.btn-fill.btn-wd.buttonAmenityDone(type='button') Done
                                        button.btn.btn-secondary.pull-left.btn.btn-danger.btn-fill.btn-wd(type='button', data-dismiss='modal') Cancel
                              
                              #summary.modal.fade(tabindex='-1', role='dialog' aria-labelledby='myModalLabel')
                                .modal-dialog.modal-lg(role='document')
                                  .modal-content
                                    .modal-header
                                      h5.modal-title
                                        center Summary
                                      button.close(type='button', data-dismiss='modal', aria-label='Close')
                                    .modal-body
                                      div
                                        h5
                                          strong#CustName
                                         
                                          br
                                        h5
                                          strong#room
                                          br
                                          strong#roomRate
                                          hr
                                      .fresh-datatables
                                        table#datatables.table.table-no-bordered.table-hover(cellspacing='0', width='100%', style='width:100%')
                                          thead
                                            tr
                                              th.disabled-sorting
                                                strong Availed Services
                                              th.disabled-sorting Quantity
                                              th.disabled-sorting Amount
                                          tfoot
                                            tr
                                              th.disabled-sorting
                                              th
                                              th
                                              
                                          tbody#ViewServicesAvailed
                                              
                                        div
                                          h2
                                            strong#totalPrice
                                            input.TotalPrice(type='' value='')
                                          h4
                                            strong#totalPoints
                                      .modal-footer
                                        center
                                          button.btn.btn-secondary.pull-left.btn.btn-danger.btn-fill.btn-wd(type='button', data-dismiss='modal') Close
                              
                              
                              
                              
                              
                              
                          
    .fixed-plugin
    // Core JS Files. Extra: TouchPunch for touch library inside jquery-ui.min.js
    script(src='/assets/paperDashboardPro/js/jquery-3.1.1.min.js', type='text/javascript')
    script(src='/assets/paperDashboardPro/js/jquery-ui.min.js', type='text/javascript')
    script(src='/assets/paperDashboardPro/js/perfect-scrollbar.min.js', type='text/javascript')
    script(src='/assets/paperDashboardPro/js/bootstrap.min.js', type='text/javascript')
    // Forms Validations Plugin
    script(src='/assets/paperDashboardPro/js/jquery.validate.min.js')
    // Promise Library for SweetAlert2 working on IE
    script(src='/assets/paperDashboardPro/js/es6-promise-auto.min.js')
    // Plugin for Date Time Picker and Full Calendar Plugin
    script(src='/assets/paperDashboardPro/js/moment.min.js')
    // Date Time Picker Plugin is included in this js file
    script(src='/assets/paperDashboardPro/js/bootstrap-datetimepicker.js')
    // Select Picker Plugin
    script(src='/assets/paperDashboardPro/js/bootstrap-selectpicker.js')
    // Switch and Tags Input Plugins
    script(src='/assets/paperDashboardPro/js/bootstrap-switch-tags.js')
    // Circle Percentage-chart
    script(src='/assets/paperDashboardPro/js/jquery.easypiechart.min.js')
    // Charts Plugin
    script(src='/assets/paperDashboardPro/js/chartist.min.js')
    // Notifications Plugin
    script(src='/assets/paperDashboardPro/js/bootstrap-notify.js')
    // Sweet Alert 2 plugin
    script(src='/assets/paperDashboardPro/js/sweetalert.js')
    // Wizard Plugin
    script(src='/assets/paperDashboardPro/js/jquery.bootstrap.wizard.min.js')
    // Bootstrap Table Plugin
    script(src='/assets/paperDashboardPro/js/bootstrap-table.js')
    // Plugin for DataTables.net
    script(src='/assets/paperDashboardPro/js/jquery.datatables.js')
    // Full Calendar Plugin
    script(src='/assets/paperDashboardPro/js/fullcalendar.min.js')
    // Paper Dashboard PRO Core javascript and methods for Demo purpose
    script(src='/assets/paperDashboardPro/js/paper-dashboard.js')
    // Sharrre Library
    script(src='/assets/paperDashboardPro/js/jquery.sharrre.js')
    script(src='/assets/paperDashboardPro/js/jquery.select2.js')
    // Paper Dashboard PRO DEMO methods, don't include it in your project!
    script(src='/assets/paperDashboardPro/js/demo.js')
    script(src='/assets/pdfmake/pdfmake.js')
    script(src='/assets/pdfmake/vfs_fonts.js')
    
    //- AMENITY PAYNOW
    script.
      $(document).ready(function(){
        $('.payNowAmenityButton').click(function(){
          var cust_id = $(this).val()
          var amenity_id= $(`.amenityId[id='${cust_id}']`).val()
          var name = $(`.amenityName[id='${cust_id}']`).val()
          var guest_quantity = $(`.number_guest[id='${cust_id}']`).val()
          var total_fee = $(`.total_fee[id='${cust_id}']`).val()  
          var scriptSession = !{JSON.stringify(reqSession)};
          var entrance_fee = scriptSession.utilities[0].entrance_fee

          $('#paynowAmenity').modal('show')

          $('#numberOfGuest').append(`${guest_quantity} x `)
          $('#Name').append(`${name}`)
          $('#EntranceFee').append(`₱${entrance_fee}`)
          $('.totalAmenityPrice').val(total_fee)
          $('#TotalAmenityPrice').append(`Total Price: ₱${total_fee}`)
        


        $('.buttonAmenityDone').click(function(){
            var amount_received = $('.amountAmenityReceived').val()
            var total_price = $('.totalAmenityPrice').val()
            
            console.log('AMOUNT RECEIVED', amount_received)
            console.log('TOTAL PRICE', total_price)

            console.log(amount_received >= total_price)
            if(amount_received == 0)
            {
              swal({
                title: "Amount Received is 0.",
                icon: 'warning'
              })
            }
            else if(amount_received < total_price)
            {
              swal({
                title: "The amount received is insuficient.",
                icon: 'warning'
              })
            }
            else if(parseFloat(amount_received) >= parseFloat(total_price))
            {
              swal({
                title: "Are you sure?",
                icon: 'info',
                buttons: ["No","Yes"]
              }).then(function(yes){
                  if(yes)
                  {
                    $.post('./AmenityLatePayment',{cust_id,amenity_id}).done(function(data){
                      if(data.alertDesc==0)
                      {
                        swal({
                          title: "Success",
                          icon: 'success'
                        }).then(function(){
                          location.reload()
                        })
                      }
                      else
                      {
                        swal({
                          title: "ERROR",
                          icon: 'error'
                        })
                      }
                    })
                  }
                  else
                  {

                  }
              })
            }
        })
        $('#paynowAmenity').on('hidden.bs.modal', function (){
          $('#Name').empty()
          $('#EntranceFee').empty()
          $('.totalAmenityPrice').empty()  
          $('#TotalAmenityPrice').empty()        
          $('#numberOfGuest').empty()
        })
        })

      })
    

    //- COMPUTATION FOR CHANGE[AMENITY]
    script.
      $(document).ready(function(){
        $('.amountAmenityReceived').on('change paste keyup',function(){
          var totalPrice = $('.totalAmenityPrice').val()
          var input = $('.amountAmenityReceived').val()
          if($('.amountAmenityReceived').val()==0)
            {
              $('.changeAmenity').val(0)
            }
          else
          {
            input -= parseFloat(totalPrice)
            $('.changeAmenity').val(input)
          }
        })
      })

    //- AMENITY REFUND
    script.
      $(document).ready(function(){
        $('.amenityRefundButton').click(function(){
          var cust_id = $(this).val()
          var date = $(`.date[id='${cust_id}'`).val()
          var amenity_id= $(`.amenityId[id='${cust_id}']`).val()
          var scriptSession = !{JSON.stringify(reqSession)};
          var amenity_cancellation = scriptSession.utilities[0].amenity_cancellation
          var timeNow = moment(new Date()).format('MMMM DD, YYYY hh:mm A')
          var allowable_time = moment(date).add(amenity_cancellation,'minutes').format('MMMM DD, YYYY hh:mm A')
          console.log('DATE', date)
          console.log('ALLOWABLE TIME', allowable_time)

          if(moment(timeNow).isSameOrAfter(allowable_time))
          {
            swal({
              title: 'Ooops',
              text: 'Sorry no refund',
              icon:'error'
            })
          }
          else
          {
            swal({
              title: 'Refund? Are you sure?',
              text: "Once done, it can't be undone.",
              icon: 'warning',
              buttons: ["No","Yes"]
            }).then(function(yes){
              if(yes)
              {
                $.post('./AmenityRefund',{cust_id,amenity_id}).done(function(data){
                  if(data.alertDesc==0)
                  {
                    swal({
                      title: 'Success',
                      text: ' ',
                      icon: 'success'
                    }).then(function(){
                      location.reload()
                    })
                  }
                  else
                  {
                    swal({
                      title:'Error',
                      icon:'error'
                    })
                  }
                })
              }
            })
          }
        })
      })

    //- PAYMENT LOYALTY MEMBER
    script.
      $(document).ready(function(){
        $('.payNowButton').click(function(){
          var loyalty_id = $(this).val()
          var cust_name = $(`.loyalty_name[id='${loyalty_id}']`).val()
          var scriptSession = !{JSON.stringify(reqSession)};
          var membership_fee = scriptSession.utilities[0].membership_fee
          $('#payment').modal('show')
          $('#customerName').append(`${cust_name}`)
          $('#TotalLoyaltyPrice').append(`Total Price: ₱${membership_fee}`)
          $('.totalLoyaltyPrice').val(membership_fee)

          $('.buttonDoneLoyalty').click(function(){
            console.log($('.amountLoyaltyReceived').val())
            console.log($('.totalLoyaltyPrice').val())
            if($('.amountLoyaltyReceived').val()==0)
            {
              swal({
                title: "Amount received is 0.",
                icon: 'warning'
              })
            }
            else if(parseFloat($('.amountLoyaltyReceived').val()) < parseFloat($('.totalLoyaltyPrice').val()))
            {
              swal({
                title: "The Amount Received is insuficient.",
                icon: 'warning'
              })
            }
            else if(parseFloat($('.amountLoyaltyReceived').val()) >= parseFloat($('.totalLoyaltyPrice').val()))
            {
              swal({
                title: "Are you sure?",
                icon: 'info'
              }).then(function(sure){
                if(sure)
                {
                  $.post('./LatePaymentForLoyalty',{loyalty_id,membership_fee}).done(function(data){
                    if(data.alertDesc==0)
                    {
                      swal({
                        title: 'Success',
                        text: cust_name+' is now Paid for his/her loyalty membership fee.',
                        icon: 'success'
                      }).then(function(){
                        location.reload()
                      })
                    }
                    else if(data.alertDesc == 1)
                    {
                      swal({
                        title: 'ERROR',
                        icon: 'error'
                      })
                    }
                  })
                }
              })
            }
          })
        })
        $("#p").on('hidden.bs.modal', function (){
          $("#Services").empty()
        })
      })
    //- COMPUTATION FOR CHANGE
    script.
      $(document).ready(function(){
        $('.amountLoyaltyReceived').on('change paste keyup',function(){
          var totalPrice = $('.totalLoyaltyPrice').val()
          var input = $('.amountLoyaltyReceived').val()
          if($('.amountLoyaltyReceived').val()==0)
            {
              $('.changeLoyalty').val(0)
            }
          else
          {
            input -= parseFloat(totalPrice)
            $('.changeLoyalty').val(input)
          }
        })
      })
    script.
      $(document).ready(function(){
        $('.amountReceived').on('change paste keyup',function(){
          var totalPrice = $('.totalPrice').val()
          var gc_total = $('.totalGCval').val()
          var input = $('.amountReceived').val()
          var amountNeeded = $('.amountNeeded').val()
          
          var pointsChecked = $('.checkboxPayment:checked')
          var giftcertSelected = $('.selectpickerGc > option:selected')
          console.log('points naka check',pointsChecked.length)
          console.log(giftcertSelected.length)

          if($('.amountReceived').val()==0)
            {
              $('.change').val(0)
            }
          else
            {
              if($('.paid_stats').val() !=3 )
              {

                  if($('#checkbox_gc')[0].checked == false && $('#checkboxPoints')[0].checked == false) // CASH ONLY
                  {
                      console.log('CASH ONLY')
                      var change = parseFloat(input) - parseFloat(totalPrice)
                      $('.change').val(change)
                  }
                  else if ($('#checkbox_gc')[0].checked == false && $('#checkboxPoints')[0].checked == true && pointsChecked.length !=0) // CASH AND POINTS
                  {
                    
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                  }
                  else if($('#checkbox_gc')[0].checked == false && $('#checkboxPoints')[0].checked == true && pointsChecked.length ==0)
                  {
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkboxPoints').prop('checked',false)
                  }
                  else if ($('#checkbox_gc')[0].checked == true && giftcertSelected.length !=0 && $('#checkboxPoints')[0].checked == false) // CASH AND GC
                  {
                    
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                  }
                  else if($('#checkbox_gc')[0].checked == true && giftcertSelected.length ==0 && $('#checkboxPoints')[0].checked == false)
                  {
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkbox_gc').prop('checked',false)
                  }

          
                  if($('#checkbox_gc')[0].checked == true  && giftcertSelected.length != 0 && $('#checkboxPoints')[0].checked == true && pointsChecked.length !=0) // CASH , GIFT CERT AND POINTS
                  {
                    console.log('ALL')
                    var amountNeeded = $('.amountNeeded').val()
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                  }
                  else if($('#checkbox_gc')[0].checked == true  && giftcertSelected.length != 0 && $('#checkboxPoints')[0].checked == true && pointsChecked.length ==0)
                  {
                    var amountNeeded = $('.amountNeeded').val()
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkboxPoints').prop('checked',false)
                  }
                  else if($('#checkbox_gc')[0].checked == true  && giftcertSelected.length == 0 && $('#checkboxPoints')[0].checked == true && pointsChecked.length !=0)
                  {
                    var amountNeeded = $('.amountNeeded').val()
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkbox_gc').prop('checked',false)
                  }
                  else if($('#checkbox_gc')[0].checked == true && giftcertSelected.length == 0 && $('#checkboxPoints')[0].checked == true && pointsChecked.length ==0)
                  {
                    $('#checkbox_gc').prop('checked',false)
                    $('#checkboxPoints').prop('checked',false)
                  }

                  if(amountNeeded == '0')
                  {
                    swal({
                      title: 'The balance is 0',
                      icon: 'info'
                    }).then(function(){
                      $('.amountReceived').val(' ')
                      $('.change').val(0)
                    })
                  }
                }
                else
                {
                  if($('#checkbox_gc')[0].checked == false ) // CASH ONLY
                  {
                      console.log('CASH ONLY')
                      var change = parseFloat(input) - parseFloat(totalPrice)
                      $('.change').val(change)
                  }
                  else if ($('#checkbox_gc')[0].checked == true && giftcertSelected.length !=0 ) // CASH AND GC
                  {
                    
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                  }
                  else if($('#checkbox_gc')[0].checked == true && giftcertSelected.length ==0 )
                  {
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkbox_gc').prop('checked',false)
                  }

          
                  if($('#checkbox_gc')[0].checked == true  && giftcertSelected.length != 0 ) // CASH , GIFT CERT AND POINTS
                  {
                    console.log('ALL')
                    var amountNeeded = $('.amountNeeded').val()
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)

                  }
                  else if($('#checkbox_gc')[0].checked == true  && giftcertSelected.length == 0 )
                  {
                    var amountNeeded = $('.amountNeeded').val()
                    var change = parseFloat(input) - parseFloat(amountNeeded)
                    $('.change').val(change)
                    $('#checkbox_gc').prop('checked',false)
                  }
                  else if($('#checkbox_gc')[0].checked == true && giftcertSelected.length == 0 )
                  {
                    $('#checkbox_gc').prop('checked',false)

                  }

                  if(amountNeeded == '0')
                  {
                    swal({
                      title: 'The balance is 0',
                      icon: 'info'
                    }).then(function(){
                      $('.amountReceived').val(' ')
                      $('.change').val(0)
                    })
                  }
                }
              }
        })
      })
    
    script.
      $(document).ready(function(){
        $('.hello').click(function(){
          var scriptSession = !{JSON.stringify(reqSession)}
          var id = $(this).val()
            $('#RegisterModal').modal('show')
            $('#checkout').modal('hide')
            var membership_validity = scriptSession.utilities[0].membership_validity
            var date_now = moment(new Date()).format('MMMM DD, YYYY')
            var validity = moment(date_now).add(membership_validity,'months').format('MMMM DD, YYYY')
            //- alert(validity)
            $('.buttonRegister').click(function(){
              $.post('/payment/register',{
                username: $('#username').val(),
                password: $('#password').val(),
                membership_validity: validity,
                id:id})
                .done(function(data){
                  console.log(data)
                  if(data.alertDesc==0)
                    {
                      swal({
                        title: "Success",
                        icon: "success"
                      }).then(function(){
                        $('#RegisterModal').modal('hide')
                        location.reload()
                      })
                    }
                  else if(data.alertDesc==3)
                    {
                      swal({
                        title:'Not Success', 
                        text:'Username already exist.', 
                        icon:'warning'
                        }).then(function(){
                          $('#RegisterModal').modal('show')
                        })
                    }
                  else if(data.alertDesc==1)
                    {
                      swal({
                        title: 'ERROR',
                        icon: 'error'
                      })
                    }
                })
          })
        })
      })



    script.
      $(document).ready(function(){
        $('.viewButton').click(function(){
          
          var id = $(this).val()
          $('#summary').modal('show')
          $.post('/payment/query/CheckSummary',{id:id})
          .done(data=>{
            console.log(data)
            $('#room').append(`Room: ${data.out1[0].room_name}`)
            $('#roomRate').append(`Room Rate: ${data.out1[0].room_rate}`)
            var paid_stats = $('.paid_stats').val()
            if(paid_stats == 0)
            {
              total_amount= data.out2.walkin_total_amount + 600
              var amount = parseFloat(data.out3.amount).toFixed(2)
              $('#totalPrice').append(`Total: ${(amount).toFixed(2)}`)
              $('.TotalPrice').val(`${(data.out3.amount).toFixed(2)}`)
  
            }
            else if (paid_stats !=0)
            {
              var amount = parseFloat(data.out3.amount).toFixed(2)
              $('#totalPrice').append(`Total: ${amount}`)
              $('.TotalPrice').val(`${amount}`)
            }
            //- else
            //- {
            //-   $('#totalPrice').append(`Total: ${data.out3.amount}`)
            //-   $('.TotalPrice').val(`${data.out3.amount}`)
            //- }
            
              $('#totalPoints').append(`Total Points earned: ${data.out2.walkin_total_points}`)

            $('#CustName').append(`Customer Name: ${data.out2.cust_fname} ${data.out2.cust_mname} ${data.out2.cust_lname}`)
            for(var i=0;i<data.out1.length;i++)
            {
            $('#ViewServicesAvailed').append(`
              <tr>
              <td>${data.out1[i].service_name} </td>
              <td>${data.out1[i].service_total_quantity}</td>
              <td>${data.out1[i].service_total_price}</td>
              </tr>
            `)
          
            }
            $('#summary').on('hidden.bs.modal', function (){
          $('#ViewServicesAvailed').empty()
          $('#CustName').empty()
          $('#totalPrice').empty()
          $('.TotalPrice').empty()  
        })
          })
        
        
        
        //- $('.buttonDone').click(function(){
        //-   //- alert($('.amountReceived').val())
        //-   if($('.amountReceived').val()==0)
        //-     {
        //-       swal({
        //-         title: "Amount Received is 0",
        //-         icon: 'warning'
        //-       })
        //-     }
        //-   else if($('.amountReceived').val() < $('.totalPrice').val())
        //-     {
        //-       swal({
        //-         title: "Amount Received is insufficient",
        //-         icon: 'warning'
        //-       })
        //-     }
        //-   else
        //-     {
        //-   $.post('/payment/Finish',{
        //-     id:id,
        //-     amount: $('.totalPrice').val(),
        //-     cust_id: $('.hello').val() 
        //-     }).done(function(data){
        //-       if(data.alertDesc==0)
        //-         {
        //-           swal({
        //-             title: "Success",
        //-             icon: 'success'
        //-           }).then(function(){
        //-             location.reload()
        //-           })
        //-         }
        //-       else
        //-         {
        //-           swal({
        //-             title: "ERROR",
        //-             icon: 'error'
        //-           })
        //-         }
            
        //-     })
        //-     }
        //- })
        })
      
        //- $('.viewdetailsButton').click(function(){
        //-   var id = $(this).val()
        //-   $.post('/payment/query/CheckoutDets',{id:id})
        //-   .done(data=>{
        //-     $('#viewDetails').modal('show')
        //-   })
        //- })
      })


    script.
      $(document).ready(function(){
        $('.checkoutButton').click(function(){
          var scriptSession = !{JSON.stringify(reqSession)};
          var id = $(this).val()
          let sample = [
              [{text: 'Services Availed', style: 'tableHeader'}, {text: 'Quantity', style: 'tableHeader'}, {text: 'Amount', style: 'tableHeader'}, {text: 'Equivalent Points', style: 'tableHeader'}]
          ]
          $('#checkout').modal('show')
          $.post('/payment/query/CheckoutDets',{id:id})
          .done(data=>{
            console.log(data)
            console.log(data.outServices.length)
            $('#Room').append(`Room: ${data.outServices[0].room_name} `)
            if(data.outServices[0].room_rate==0){
                $('#RoomRate').append(`Room Fee: FREE`)

            } else{
                $('#RoomRate').append(`Room Fee: ${data.outServices[0].room_rate}`)
              }
           
            console.log(data.out2.cust_type)
            if(data.out2.cust_type == 0)
            {
              $('#TotalPrice').append(`Total: ₱${parseFloat(data.out2.walkin_total_amount).toFixed(2)}`)
              $('.totalPrice').val(`${parseFloat(data.out2.walkin_total_amount).toFixed(2)}`)
              $('#AmountNeeded').text(`₱${parseFloat(data.out2.walkin_total_amount).toFixed(2)}`)
              $('.amountNeeded').val(`${parseFloat(data.out2.walkin_total_amount).toFixed(2)}`)

              $('#TotalPoints').append(`Total Points to be earned: ${data.out2.walkin_total_points}`)
              $('.totalPoints').val(data.out2.walkin_total_points)
              $('.hello').val(data.out2.cust_id)
              $('.paid_stats').val(3)
            }
            else
            {
              if(data.out2.paid_status==0)
              {
                total_amount= data.out2.walkin_total_amount + parseFloat(scriptSession.utilities[0].membership_fee)
                $('#TotalPrice').append(`Total: ₱${(total_amount).toFixed(2)}`)
                $('.totalPrice').val(`${(total_amount).toFixed(2)}`)
                $('#AmountNeeded').text(`₱${(total_amount).toFixed(2)}`)
                $('.amountNeeded').val((total_amount).toFixed(2))

                $('#TotalPoints').append(`Total Points to be earned: ${data.out2.walkin_total_points}`)
                $('.totalPoints').val(data.out2.walkin_total_points)
                $('.hello').val(data.out2.cust_id)
                $('.paid_stats').val(data.out2.paid_status)
              }
              else if (data.out2.paid_status==1)
              {
                $('#TotalPrice').append(`Total: ₱${(data.out2.walkin_total_amount).toFixed(2)}`)
                $('.totalPrice').val(`${(data.out2.walkin_total_amount).toFixed(2)}`)
                $('#AmountNeeded').text(`₱${(data.out2.walkin_total_amount).toFixed(2)}`)
                $('.amountNeeded').val(`${(data.out2.walkin_total_amount).toFixed(2)}`)

                $('#TotalPoints').append(`Total Points to be earned: ${data.out2.walkin_total_points}`)
                $('.totalAmountPoints').val(data.out2.walkin_total_points)
                $('.hello').val(data.out2.cust_id)
                $('.paid_stats').val(1)
              }
            }

            if(data.out2.vat_exempt_id == null){
              $('.vat_exempt_custHidden').val(0)
            } else {
              $('.vat_exempt_custHidden').val(1)
            }

            if(data.out2.cust_type==1)
            {
                $('.hello').addClass('hidden')
                $('.currentPoints').val(data.out2.member_points)
                $('.newPoints').val(data.out2.member_points)
                $('#appendDito').append(`
                  <div class="form-group has-default bmd-form-group">
                  <label id="CurrentPoints"> Current Points: ${data.out2.member_points} </label>
                  <div class="checkbox">
                    <input id="checkboxPoints" type="checkbox"/>
                    <label for="checkboxPoints">Pay using Points</label>
                  </div>
                </div>`)
            }
            else
            {

            }

            $('#custName').append(`Customer Name: ${data.out2.cust_fname} ${data.out2.cust_mname} ${data.out2.cust_lname}`)
            var reservation_date = moment(data.out2.walkin_date).format('MMMM DD, YYYY')
            $('#ReservationDate').append(`Reservation Date: ${reservation_date}`)
            $('#ReservationTime').append(`Reservation Time: ${data.out2.walkin_start_time} to ${data.out2.walkin_end_time}`)
            $(".walkin_id").val(id)
            $('.customer_id').val(data.out2.cust_id)
            $('.cust_type').val(data.out2.cust_type)
            console.log(data.outServices.length)
            
            if(data.outServices.length != 0)
            {
              for(var i=0;i<data.outServices.length;i++)
              {
                console.log("SERVICES")
                console.log(data.outServices[i])
                var final_price = parseFloat(data.outServices[i].service_total_quantity) * parseFloat(data.outServices[i].service_price);
                var total_equivalent_points = parseFloat(data.outServices[i].service_total_quantity) * parseFloat(data.outServices[i].service_equivalentPoints)
                $('#viewServicesAvailedService').append(`
                  <tr>
                  <td>
                    ${data.outServices[i].service_name} 
                    <input class="service_name" id="${data.outServices[i].service_id}" type="" value="${data.outServices[i].service_name}"/> 
                  </td>
                  <td>
                    ${data.outServices[i].service_total_quantity}
                    <input class="service_total_quantity" id="${data.outServices[i].service_id}" type="" value="${data.outServices[i].service_total_quantity}"/>
                  </td>
                  <td>
                    ₱${parseFloat(final_price).toFixed(2)}
                    <input class="service_total_price" id="${data.outServices[i].service_id}" type="" value="${parseFloat(final_price).toFixed(2)}"/>
                    <input class="newhalaga" type='' value="" id="${data.outServices[i].service_id}">
                  </td>
                  <td>
                    ${total_equivalent_points}
                    <input  class="total_equivalent_points" id="${data.outServices[i].service_id}" type="" value="${total_equivalent_points}"/>
                    <input class="newPointsEq" type='' value="" id="${data.outServices[i].service_id}">
                  </td>
                  <td>
                    <input class="checkboxPayment" type="checkbox" value="${data.outServices[i].service_id}" style='display:none' />
                  </td>
                  </tr>
                `)
                sample.push([data.outServices[i].service_name, data.outServices[i].service_total_quantity, '₱'+parseFloat(final_price).toFixed(2),total_equivalent_points])
              }
            }
            else
            {
              $('#Service').css('display','none')
            }
            if(data.outPromo.length != 0 )
            {
              for(var i=0;i<data.outPromo.length;i++)
              {
                var final_price = parseFloat(data.outPromo[i].service_total_quantity) * parseFloat(data.outPromo[i].service_total_price);
                var total_equivalent_points = parseFloat(data.outPromo[i].service_total_quantity) * parseFloat(data.outPromo[i].promobundle_equivalentPoints)
                $('#viewServicesAvailedService').append(`
                  <tr>
                  <td>
                    ${data.outPromo[i].promobundle_name}
                    <input class="service_name" id="${data.outPromo[i].promobundle_id}" type="" value="${data.outPromo[i].promobundle_name}"/> 
                  </td>
                  <td>
                    ${data.outPromo[i].service_total_quantity}
                    <input class="service_total_quantity" id="${data.outPromo[i].promobundle_id}" type="" value="${data.outPromo[i].service_total_quantity}"/>
                  </td>
                  <td>
                    ₱${(final_price).toFixed(2)}
                    <input class="service_total_price" id="${data.outPromo[i].promobundle_id}" type="" value="${final_price}"/>
                    <input class="newhalaga" type='' value="" id="${data.outPromo[i].promobundle_id}">
                  </td>
                  <td>
                    ${total_equivalent_points}
                    <input  class="total_equivalent_points" id="${data.outPromo[i].promobundle_id}" type="" value="${total_equivalent_points}"/>
                    <input class="newPointsEq" type='' value="" id="${data.outPromo[i].promobundle_id}">
                  </td>
                  <td>
                    <input class="checkboxPayment" type="checkbox" value="${data.outPromo[i].promobundle_id}" style='display:none' />
                  </td>
                  </tr>
                `)
                sample.push([data.outPromo[i].promobundle_name, data.outServices[i].service_total_quantity, '₱'+parseFloat(final_price).toFixed(2),total_equivalent_points])
              }
            }
            else
            {
              $('#Promo').css('display','none')
            }
            if(data.outPackage.length != 0 )
            {
              for(var i=0;i<data.outPackage.length;i++)
              {
                console.log("PACKAGE")
               console.log(data.outPackage[i].package_name)
                var final_price = parseFloat(data.outPackage[i].service_total_quantity) * parseFloat(data.outPackage[i].package_price);
                var total_equivalent_points = parseFloat(data.outPackage[i].service_total_quantity) * parseFloat(data.outPackage[i].package_points)
                $('#viewServicesAvailedService').append(`
                  <tr>
                  <td>${data.outPackage[i].package_name}
                    <input class="service_name" id="${data.outPackage[i].package_id}" type="" value="${data.outPackage[i].package_name}"/> 
                  </td>

                  <td>${data.outPackage[i].service_total_quantity}
                   <input class="service_total_quantity" id="${data.outPackage[i].package_id}" type="" value="${data.outPackage[i].service_total_quantity}"/>
                  </td>
                  <td>
                    ₱${parseFloat(final_price).toFixed(2)}
                    <input class="service_total_price" id="${data.outPackage[i].package_id}" type="" value="${final_price}"/>
                    <input class="newhalaga" type='' value="" id="${data.outPackage[i].package_id}">
                  </td>
                  <td>${total_equivalent_points}
                    <input  class="total_equivalent_points" id="${data.outPackage[i].package_id}" type="" value="${total_equivalent_points}"/>
                    <input class="newPointsEq" type='' value="" id="${data.outPackage[i].package_id}">
                  </td>
                  <td>
                    <input class="checkboxPayment" type="checkbox" value="${data.outPackage[i].package_id}" style='display:none' />
                  </td>
                  </tr>
                `)
                sample.push([data.outPackage[i].package_name, data.outPackage[i].service_total_quantity, '₱'+parseFloat(final_price).toFixed(2),total_equivalent_points])
              }
            }
            else
            {
              $('#Package').css('display','none')
            }

            $('#checkout').on('hidden.bs.modal', function (){
              $('#viewServicesAvailed').empty()
              $('#custName').empty()
              $('#TotalPrice').empty()
              $('.totalPrice').empty() 
              $('#Room').empty()
              $('#RoomRate').empty()
              $('#totalPoints').empty() 
              $("#viewServicesAvailedService").empty()
              $('#appendDito').empty()
              $('#ReservationDate').empty()
              $('#ReservationTime').empty()
              $('#TotalPoints').empty()
        })
          $('#datatablesCheckout').DataTable({"lengthMenu": [[5, 25, 50, -1], [5, 25, 50, "All"]],retrieve: true,})
          })
        
        
        function INSUFFICIENT(){
          swal({
              title: 'The amount received is Insufficient!',
              text: 'Please double check',
              icon: 'error'
          })
        }
        function PAYMENT(payment_type){
          var paid_stats = $('.paid_stats').val()
          if(paid_stats == 1){
            var newPoints = parseFloat($('.newPoints').val()) + parseFloat($('.totalAmountPoints').val()) 
            var total_points = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val())
          }
          //- var total_points = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val())
          //- var newPoints = parseFloat($('.newPoints').val()) + parseFloat($('.totalAmountPoints').val()) 
          var balance = $('.amountNeeded').val()
          var total_price = $('.totalPrice').val()
          //- console.log(parseFloat($('.newPoints').val()))
          //- console.log(parseFloat($('.totalAmountPoints').val()))
          //- console.log('NEW POINTS', newPoints)
          //- console.log('TOTAL POINTS',total_points)
              //- alert(total_points)
              $.post('/payment/PayNow',{
              payment_type : payment_type,
              balance,
              total_price,
              walkin_id : $('.walkin_id').val(),
              amount_received : $('.amountReceived').val(),
              cust_type : $('.cust_type').val(),
              total_points,
              cust_id : $('.customer_id').val(),
              gift_certs : $('.selectpickerGc').val(),
              newPoints
              }).done(function(data){
                if(data.alertDesc==0){
                  swal({
                    title: "Success",
                    icon: 'success'
                  }).then(function(){
                    PDF(sample)
                    location.reload()
                  })
                  } else{
                    swal({
                      title: "ERROR",
                      icon: 'error'
                    })
                  }
                })
              }

        function PDF(sample){
          var scriptSession = !{JSON.stringify(reqSession)};
          var company_name = scriptSession.utilities[0].company_name
          var company_address = scriptSession.utilities[0].company_address
          var vat_exempt_custHidden = $('.vat_exempt_custHidden').val()
          var name = $('#custName').text()
          if(vat_exempt_custHidden == 1){
            var vat = parseInt(scriptSession.utilities[0].vat) / 100 
            var total_price = parseFloat($('.totalPrice').val()).toFixed(2)
            var vat_price = parseFloat($('.originalTotal').val()).toFixed(2)
            var vatable = {text: 'Original Price: ₱'+vat_price, fontSize: 13, bold: true}
            var vat_amount = parseFloat($('.originalTotal').val()) * vat
            var vatable_sales = parseFloat(vat_price) - parseFloat(vat_amount)
          } else if(vat_exempt_custHidden == 0){
            var vat = parseInt(scriptSession.utilities[0].vat) / 100 
            var total_price = parseFloat($('.totalPrice').val())
            var vat_amount = parseFloat($('.totalPrice').val()) * vat
            var vatable_sales = parseFloat(total_price) - parseFloat(vat_amount)
          }
          var paid_stats = $('.paid_stats').val()
          if(paid_stats != 3){
            var checkboxPoints = $('#checkboxPoints')[0].checked
          }
          var checkboxPointsLength = $('.checkboxPayment:checked').length
          var balance = $('.amountNeeded').val()
          var cash = $('.amountReceived').val() 
          var giftCert_total = $('.gcTotal').val()
          var change = parseFloat($('.change').val()).toFixed(2)
          //- console.log('vatable sales', (vatable_sales).toFixed(2))
          //- console.log('total price', total_price)
          //- console.log('VAT', (vat_amount).toFixed(2))

          //- CASH
          if(cash != '' && giftCert_total == 0){
            var payment_type = 'CASH'
            var amount_received = parseFloat($('.amountReceived').val()).toFixed(2)
          }
          //- GIFT CERTIFICATE
          if(cash == '' && giftCert_total != 0){
            var amount_received = '0.00'
            var payment_type = 'GIFT CERTIFICATE(₱'+parseFloat(giftCert_total).toFixed(2)+')'
          }
          //- CASH AND GIFT CERTIFICATE
          if(cash != '' && giftCert_total != 0){
            var payment_type = 'CASH AND GIFT CERTIFICATE(₱'+parseFloat(giftCert_total).toFixed(2)+')'
            var amount_received = parseFloat($('.amountReceived').val()).toFixed(2)
          }
          //- POINTS
          if(cash =='' && giftCert_total ==0 && checkboxPoints){
            var points_received = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val())
            var payment_type = 'POINTS('+(points_received).toFixed(2)+' points)'
            var amount_received = '0.00'
          }
          //- POINTS AND CASH
          if(cash != '' && checkboxPoints == true){
            var points_received = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val())
            var payment_type = 'CASH AND POINTS('+(points_received).toFixed(2)+' points)'
            var amount_received = parseFloat($('.amountReceived').val()).toFixed(2)
          }
          //- GIFT CERTIFICATE AND POINTS
          if(cash == '' && giftCert_total !=0 && checkboxPoints){
            var points_received = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val())
            var amount_received = '0.00'
            var payment_type = 'GIFT CERTIFICATE(₱'+parseFloat(giftCert_total).toFixed(2)+') AND POINTS('+(points_received).toFixed(2)+' points)'
          }
          //- CASH, GIFT CERTIFICATE AND POINTS
          if(cash != '' && giftCert_total != 0 && checkboxPoints){
            var points_received = parseFloat($('.currentPoints').val()) - parseFloat($('.newPoints').val()) 
            var payment_type = 'CASH, GIFT CERTIFICATE(₱'+parseFloat(giftCert_total).toFixed(2)+') AND POINTS('+(points_received).toFixed(2)+' points)'
            var amount_received = parseFloat($('.amountReceived').val()).toFixed(2)
          }
          let dynamicBody = [
              [{text: 'Services Availed', style: 'tableHeader'}, {text: 'Quantity', style: 'tableHeader'}, {text: 'Amount', style: 'tableHeader'}, {text: 'Equivalent Points', style: 'tableHeader'}]
          ]

                  var date_time = moment(new Date()).format('MMMM DD, YYYY hh:mm A')
                  var docDefinition = {
                  content: [
                      {text: company_name, fontSize: 20, bold: true, alignment: 'center'},
                      {text: company_address, fontSize: 14, bold: false,alignment: 'center'},
                      {text: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ', fontSize: 14, bold: false, margin: [0, 0, 0, 0]},
                      {text: "Date: "+date_time, fontSize: 12, bold: false,},
                      {text: name, fontSize: 12, bold: false,},
                      {text: $('#Room').text()+'                  '+$('#RoomRate').text(), fontSize: 12, bold: false,},
                      //- {text: , fontSize: 14, bold: false,},
                      {text: $('#ReservationTime').text(), fontSize: 12, bold: false,},
                      //- {text: $('#TimeReserv').text(), fontSize: 14, bold: false, margin: [0, 0, 0, 8]},
                      {
                        style: 'tableExample',
                        table: {
                          headerRows: 1,
                          widths: ['*', '*', '*', '*'],
                          body: sample
                        },
                        layout: 'lightHorizontalLines'
                      },
                      {text: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ', fontSize: 14, bold: false, margin: [0, 0, 0, 0]},
                      {text: 'Amount Due: ₱'+(total_price).toFixed(2), fontSize: 17, bold: true},
                      {text: 'Paid using: '+payment_type, fontSize: 12, bold: false},
                      {text: 'Cash Received: ₱'+amount_received, fontSize: 12, bold: false},
                      {text: 'Change: ₱'+change, fontSize: 12, bold: false},
                      vatable,
                      {text: 'Vatable Sales: ₱'+(vatable_sales).toFixed(2), fontSize: 12, bold: false},
                      {text: 'VAT amount'+'('+eval(vat*100)+'%): ₱'+(vat_amount).toFixed(2), fontSize: 12, bold: false},
                  ],

                    styles: {
                    header: {
                      fontSize: 18,
                      bold: true,
                      margin: [0, 0, 0, 10]
                    },
                    subheader: {
                      fontSize: 16,
                      bold: true,
                      margin: [0, 10, 0, 5]
                    },
                    tableExample: {
                      margin: [0, 5, 0, 15]
                    },
                    tableHeader: {
                      bold: true,
                      fontSize: 13,
                      color: 'black'
                    }
                    }
                  };
                  pdfMake.createPdf(docDefinition).open(); 
        }
        
        $('.buttonDone').click(function(){
          var paid_stats = $('.paid_stats').val()
          if(paid_stats != 3){
            var checkboxPoints = $('#checkboxPoints')[0].checked
          }
          var checkboxPointsLength = $('.checkboxPayment:checked').length
          var balance = $('.amountNeeded').val()
          var cash = $('.amountReceived').val() 
          var giftCert_total = $('.gcTotal').val()

          if(cash == '' && giftCert_total == 0){
            swal({
              title: 'No amount received!',
              text: 'Please double check',
              icon: 'warning'
            })
          } else {
            //- CASH ONLY
            if(cash != '' && giftCert_total == 0){
              var payment_type = 0
              if(parseInt(cash) < balance ){
                INSUFFICIENT()
              } else {
                swal({
                  title: 'Pay using Cash',
                  text: 'is the customer sure?',
                  icon: 'info',
                  buttons: ["Cancel", "Confirm"],
                }).then(function(confirm){
                  if(confirm){
                    PAYMENT(payment_type)
                    //- PDF(sample)
                  }
                })
              }
            }
          }
          //- GIFT CERTIFICATE ONLY
          if(cash == '' && giftCert_total != 0){
            var payment_type = 1
            if(giftCert_total < balance){
              INSUFFICIENT()
            } else if(giftCert_total >= balance){
              swal({
                title: 'Pay using Gift Certificate',
                text: "Note: When the payment type is Gift Certificate ONLY, there's no change will be given.",
                icon: 'info',
                buttons: ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }
          //- CASH AND GIFT CERTIFICATE
          if(cash != '' && giftCert_total != 0){
            var payment_type = 3
            if(cash < balance){
              INSUFFICIENT()
            } else {
              swal({
                title: 'Pay using Gift Certificate and Cash',
                text: "is the customer sure?",
                icon: 'info',
                buttons: ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }

          //- POINTS
          if(cash =='' && giftCert_total ==0 && checkboxPoints == true){
            var payment_type = 2
            if(parseFloat(balance) != 0){
              INSUFFICIENT()
            } else if (checkboxPointsLength == 0) {
              swal({
                title: 'No amount received!',
                text: 'Please double check',
                icon: 'warning'
              })
            } else if(checkboxPointsLength != 0) {
              swal({
                title: 'Pay using Points',
                text: 'is the customer sure?',
                icon: 'info',
                buttons: ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }

          //- POINTS AND CASH
          if(cash != '' && checkboxPoints == true){
            var payment_type = 4
            if(parseFloat(cash) < parseFloat(balance)){
              INSUFFICIENT()
            } else if (checkboxPointsLength == 0){
              swal({
                title: 'Payment using Points is checked, but no service selected',
                text: 'Please double check',
                icon: 'warning'
              })
            } else if(checkboxPoints != 0){
              swal({
                title: 'Pay using Points and Cash',
                text: 'is the customer sure?',
                icon: 'info',
                buttons: ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }

          //- GIFT CERTIFICATE AND POINTS
          if(cash == '' && giftCert_total !=0 && checkboxPoints == true){
            var payment_type = 5
            if(parseFloat(balance) != 0){
              INSUFFICIENT()
            } else {
              swal({
                title: 'Pay using Gift Certificate and Points',
                text: 'is the customer sure?',
                icon: 'info',
                buttons : ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }

          //- CASH, GIFT CERTIFICATE, AND POINTS
          if(cash != '' && giftCert_total != 0 && checkboxPoints == true){
            var payment_type = 6
            if(parseFloat(cash) < parseFloat(balance)){
              INSUFFICIENT()
            } else {
              swal({
                title: 'Pay using Cash, Gift Certificate, and Points',
                text: 'is the customer sure?',
                icon: 'info',
                buttons: ["Cancel","Confirm"]
              }).then(function(confirm){
                if(confirm){
                  PAYMENT(payment_type)
                }
              })
            }
          }
          

      })
      })
      })
                
      
        
    script.
      $(document).ready(function(){
        $('.viewdetailsButton').click(function(){
          var id = $(this).val()
          $.post('/payment/query/CheckoutDets',{id:id})
          .done(data=>{
            $('#viewDetails').modal('show')
          })
        })
      })
      
    script(type='text/javascript').
      $(document).ready(function(){
      demo.initOverviewDashboard();
      demo.initCirclePercentage();
      });
    script(type='text/javascript').
      $(document).ready(function() {
      $('#datatablesReservation').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      });
    script.
      $(document).ready(function() {
      $('#datatablesReservation2').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      });
    script.
      $(document).ready(function() {
      $('#datatablesAmenity').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      });  
    script.
      $(document).ready(function() {
      $('#datatablesAmenity2').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      });  
    script.
      $(document).ready(function() {
      $('#datatablesLoyalty').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      }); 
    script.
      $(document).ready(function() {
      $('#datatablesLoyalty2').DataTable({
      "pagingType": "full_numbers",
      "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
      responsive: true,
      language: {
      search: "_INPUT_",
      searchPlaceholder: "Search records",
      }
      });
      });   

    script(type='text/javascript').
      $(document).ready(function(){
      demo.initWizard();
      });
    script.
      $(document).ready(function(){
        $(document).on('change.bootstrapSwitch','.checkboxGC',function(e){
          var amountNeeded = $('.amountNeeded').val()

          if(e.target.checked==true)
          {
            if($('.amountNeeded').val()==0)
            {
              swal({
                  title: 'The balance is 0',
                  icon: 'info'
                }).then(function(){
                  $('.selectpickerGc').attr('disabled',true)
                  $('.selectpickerGc').val(0);
                  $('.selectpickerGc').selectpicker("refresh");
                  $('.amountReceived').val(' ')
                  $('.change').val(0)
                  $('.checkboxGC').prop('checked',false)
                })
            }
            else if(parseFloat($('.amountReceived').val()) >= $('.amountNeeded').val())
            {
              swal({
                  title: 'The balance is 0',
                  icon: 'info'
                }).then(function(){
                  $('.selectpickerGc').attr('disabled',true)
                  $('.selectpickerGc').val(0);
                  $('.selectpickerGc').selectpicker("refresh");
                  $('.checkboxGC').prop('checked',false)
                })
            }
            else
            {
              $('.amountReceived').val(' ')
              $('.change').val(' ')
              $('.selectpickerGc').removeAttr('disabled')
              $('.selectpickerGc').selectpicker("refresh");


              $('.selectpickerGc').on('change',function(){

                  $('.amountReceived').val(' ')
                  $('.change').val(0)
                  var total_value =0
                  var selected = $('option:selected',this)
                  var giftcerts =[]
                  //- console.log(giftcerts)
                  selected.each(function(){
                      giftcerts.push({
                      gc_value: parseFloat(this.getAttribute('gc_value'))
                    })
                  })

                  if(selected.length==0)
                  {
                    if($('.paid_stats').val() !=3)
                    {
                      if($('#checkboxPoints')[0].checked==false)
                      {
                        $('.amountNeeded').val(($('.totalPrice').val()).toFixed(2))
                        $('#AmountNeeded').text('₱'+($('.totalPrice').val()).toFixed(2))
                        $('.gcTotal').val(0)
                        $('#totalGCval').text(' ')
                      }

                      if($('#checkboxPoints')[0].checked==true && $('.checkboxPayment:checked').length==0)
                      {
                        $('.amountNeeded').val(($('.totalPrice').val()).toFixed(2))
                        $('#AmountNeeded').text('₱'+($('.totalPrice').val()).toFixed(2))
                        $('.gcTotal').val(0)
                        $('#totalGCval').text(' ')
                      }
                      else if($('#checkboxPoints')[0].checked==true && $('.checkboxPayment:checked').length!=0)
                      {
                          var array = []
                          var totalPrice = $('.totalPrice').val()
                          var total =0
                          $('.checkboxPayment:checked').each(function(){
                            var id = $(this).val()
                            array.push({
                              id:id,
                              newhalaga:$(`.newhalaga[id='${id}']`).val()
                              })
                          })

                          for(var i=0;i<array.length;i++)
                          {
                            total += parseFloat(array[i].newhalaga)
                            var newtotal = parseFloat(totalPrice) - total
                          }
                          $('.amountNeeded').val(newtotal)
                          $('#AmountNeeded').text('₱'+newtotal)
                        $('.gcTotal').val(0)
                        $('#totalGCval').text(' ')

                      }
                    }
                    else
                    {
                      $('.amountNeeded').val(($('.totalPrice').val()).toFixed(2))
                        $('#AmountNeeded').text('₱'+($('.totalPrice').val()).toFixed(2))
                        $('.gcTotal').val(0)
                        $('#totalGCval').text(' ')
                    }
                  }



                for(var i=0;i<giftcerts.length;i++)
                {

                  if($('.paid_stats').val() == 1 || $('.paid_stats').val() ==0 )
                  {
                    if($('#checkboxPoints')[0].checked == true)
                    {
                      total_value = total_value + giftcerts[i].gc_value
                      $('.gcTotal').val((total_value).toFixed(2))
                      
                      var newTotal = amountNeeded - total_value
                      if(newTotal < 0 )
                      {
                        $('.amountNeeded').val(0)
                        $('#AmountNeeded').text('₱'+0)
                      }
                      else
                      {
                        $('.amountNeeded').val((newTotal).toFixed(2))
                        $('#AmountNeeded').text('₱'+(newTotal).toFixed(2))

                      }
                      $('#totalGCval').text('Total: ₱'+(total_value).toFixed(2))
                      $('#TotalAmountReceived').text('₱'+(total_value).toFixed(2))
                      $('.totalGCval').val((total_value).toFixed(2))
                      $('.totalAmountReceived').val((total_value).toFixed(2))
                    }
                    else
                    {
                      total_value = total_value + giftcerts[i].gc_value
                      $('.gcTotal').val(total_value)
                      
                      var newTotal = amountNeeded - total_value
                      //- console.log(newTotal)
                      if(newTotal < 0 )
                      {
                        $('.amountNeeded').val(0)
                        $('#AmountNeeded').text('₱'+0)
                      }
                      else
                      {
                        $('#AmountNeeded').text('₱'+(newTotal).toFixed(2))
                        $('.amountNeeded').val((newTotal).toFixed(2))
                      }
                      $('#totalGCval').text('Total: ₱'+(total_value).toFixed(2))
                      $('#TotalAmountReceived').text('₱'+(total_value).toFixed(2))
                      $('.totalGCval').val((total_value).toFixed(2))
                      $('.totalAmountReceived').val((total_value).toFixed(2))
                    }
                  }
                  else
                  {
                    total_value = total_value + giftcerts[i].gc_value
                      $('.gcTotal').val(total_value)
                      
                      var newTotal = amountNeeded - total_value
                      console.log(newTotal)
                      if(newTotal < 0 )
                      {
                        $('.amountNeeded').val(0)
                        $('#AmountNeeded').text('₱'+0)
                      }
                      else
                      {
                        $('#AmountNeeded').text('₱'+(newTotal).toFixed(2))
                        $('.amountNeeded').val((newTotal).toFixed(2))
                      }
                      $('#totalGCval').text('Total: ₱'+(total_value).toFixed(2))
                      $('#TotalAmountReceived').text('₱'+(total_value).toFixed(2))
                      $('.totalGCval').val((total_value).toFixed(2))
                      $('.totalAmountReceived').val((total_value).toFixed(2))
                  } 
                }

              })

            }
          }

          else if(e.target.checked==false && $('.selectpickerGc').val().length !=0)
          {
            $('.selectpickerGc').attr('disabled',true)
            $('.selectpickerGc').val(null).trigger('change')
            //- console.log('aaa', $('.selectpickerGc').length)
            $('.selectpickerGc').selectpicker("refresh");
            $('#totalGCval').text(' ')
            if($('.paid_stats').val() !=3)
            {
              if($('#checkboxPoints')[0].checked == false ) // IF PAYMENT USING POINTS IS UNCHECK
              {
                var totalPrice = $('.totalPrice').val()
                var gc_total = $('.gcTotal').val()
                var total = parseFloat(gc_total) + parseFloat(amountNeeded)
                $('.amountNeeded').val((totalPrice).toFixed(2))
                $('#AmountNeeded').text('₱'+(totalPrice).toFixed(2))
                $('.gcTotal').val(0)
              }

              if($('#checkboxPoints')[0].checked==true && $('.checkboxPayment:checked').length ==0)
              {
                var totalPrice = $('.totalPrice').val()
                var gc_total = $('.gcTotal').val()
                var total = parseFloat(gc_total) + parseFloat(amountNeeded)
                $('.amountNeeded').val((totalPrice).toFixed(2))
                $('#AmountNeeded').text('₱'+(totalPrice).toFixed(2))
                $('.gcTotal').val(0)
              }
              else if($('#checkboxPoints')[0].checked==true && $('.checkboxPayment:checked').length !=0)
              {
                    var array = []
                    var totalPrice = $('.totalPrice').val()
                    var total =0
                    $('.checkboxPayment:checked').each(function(){
                      var id = $(this).val()
                      array.push({
                        id:id,
                        newhalaga:$(`.newhalaga[id='${id}']`).val()
                        })
                    })

                    for(var i=0;i<array.length;i++)
                    {
                        total += parseFloat(array[i].newhalaga)
                      var newtotal = parseFloat(totalPrice) - total
                    }
                    $('.amountNeeded').val((newtotal).toFixed(2))
                    $('#AmountNeeded').text('₱'+(newtotal).toFixed(2))
                  $('.gcTotal').val(0)
                  $('#totalGCval').text(' ')
              }
            }
            else
            {
              var totalPrice = $('.totalPrice').val()
              var gc_total = $('.gcTotal').val()
              var total = parseFloat(gc_total) + parseFloat(amountNeeded)
               $('.amountNeeded').val(($('.totalPrice').val()).toFixed(2))
                $('#AmountNeeded').text('₱'+($('.totalPrice').val()).toFixed(2))
              $('.gcTotal').val(0)
            }
          }
          
          else if(e.target.checked==false && $('.selectpickerGc').val().length==0)
          {
            if($('.paid_stats').val() != 3)
            {
              $('.selectpickerGc').attr('disabled',true)
              $('.selectpickerGc').val(0);
              $('.selectpickerGc').selectpicker("refresh");
              $('#totalGCval').text(' ')
              if($('#checkboxPoints')[0].checked == false ) // IF PAYMENT USING POINTS IS UNCHECK
              {
                var totalPrice = $('.totalPrice').val()
                $('.amountNeeded').val((totalPrice).toFixed(2))
                $('#AmountNeeded').text('₱'+(totalPrice).toFixed(2))
                $('.gcTotal').val(0)
              }
              else
              {
                var gc_total = $('.gcTotal').val()
                var total = parseFloat(gc_total) + parseFloat(amountNeeded)
                $('.amountNeeded').val((total).toFixed(2))
                $('#AmountNeeded').text('₱'+(total).toFixed(2))
                $('.gcTotal').val(0)
              }
            }
            else
            {
                var gc_total = $('.gcTotal').val()
                var total = parseFloat(gc_total) + parseFloat(amountNeeded)
                $('.amountNeeded').val(($('.totalPrice').val()).toFixed(2))
                $('#AmountNeeded').text('₱'+($('.totalPrice').val()).toFixed(2))
                $('.gcTotal').val(0)
                $('.selectpickerGc').attr('disabled',true)
                $('.selectpickerGc').val(0);
                $('.selectpickerGc').selectpicker("refresh");
            }
          }
        })
      })

//- POINTS CHECKBOX
script.
    $(document).ready(function(){
      $(document).on('change.bootstrapSwitch','#checkboxPoints',function(e){
        var currentPoints = $('.currentPoints').val()
        var paid_stats = $('.paid_stats').val()
        var newhalagaArray = []

        if(e.target.checked==true)
        {
          if($('.amountNeeded').val()==0)
          {
            swal({
                title: 'Is the balance complete?',
                icon: 'info'
              }).then(function(){
                $('.amountReceived').val(' ')
                $('.change').val(0)
                $('#checkboxPoints').prop('checked',false)
              })
          }
          else if($('.amountReceived').val() >= $('.amountNeeded').val())
          {
            swal({
                title: 'Is the balance complete?',
                icon: 'info'
              }).then(function(){
                $('#checkboxPoints').prop('checked',false)
              })
          }
          else
          {

            if(currentPoints==0 && paid_stats==1)
            {
              swal({
                title: 'Cannot Use Points As Payment',
                text: 'Your Points is '+currentPoints,
                icon: 'error'
              }).then(function(confirm){
                if(confirm)
                {
                  $('#checkboxPoints').prop('checked',false)
                }
                else
                {
                }
              })
            }
            else if(currentPoints==0 && paid_stats == 0)
            {
              swal({
                title: 'Cannot Use Points As Payment',
                text: 'please pay the membership fee first',
                icon: 'error'
              }).then(function(confirm){
                if(confirm)
                {
                  $('#checkboxPoints').prop('checked',false)
                }
                else
                {
                  
                }
              })
            }
            else
            {
              $('.amountReceived').val(' ')
              $('.change').val(' ')
              $('.checkboxPayment').css('display','block')
            }

            if($('#checkbox_gc')[0].checked==true && $('.selectpickerGc > option:selected').length==0)
            {
              $('#checkbox_gc').prop('checked',false)
              $('.selectpickerGc').attr('disabled',true)
              $('.selectpickerGc').val(0);
              $('.selectpickerGc').selectpicker("refresh");
            }
          }

        }
        


        else if(e.target.checked==false)
        { 
          var checkPayment = $('.checkboxPayment:checked')
          var array = []
          var total =0 
          var amountNeeded = $('.amountNeeded').val()
            $('.checkboxPayment:checked').each(function(){
              var id = $(this).val()
              array.push({
                id:id,
                newhalaga:$(`.newhalaga[id='${id}']`).val()
                })
            })

            for(var i=0;i<array.length;i++)
            {
              total += parseFloat(array[i].newhalaga)
              $(`.newhalaga[id='${array[i].id}']`).val(0)
              $(`.newPointsEq[id='${array[i].id}']`).val(0)
            }
            total = parseFloat(amountNeeded)+parseFloat(total)
            console.log('DITO')
            $('.amountNeeded').val((total).toFixed(2))
            $('#AmountNeeded').text('₱'+(total).toFixed(2))
          $('.checkboxPayment').prop('checked',false)
            $('.newPoints').val($('.currentPoints').val())
          $('.checkboxPayment').css('display','none')
            //- $('#CurrentPoints').text("Current Points: "+$('.currentPoints').val())
        }

      })
    })

script.
    $(document).ready(function(){
      $(document).on('change.bootstrapSwitch','.checkboxPayment',function(e){
        var id = $(this).val()
        var quantity = $(`.service_total_quantity[id='${id}']`).val()
        var name = $(`.service_name[id='${id}']`).val()
        var price = $(`.service_total_price[id='${id}']`).val()
        var points = $(`.total_equivalent_points[id='${id}']`).val()
        console.log("ID", id)
        console.log("QUANTITY", quantity)
        console.log("NAME", name)
        console.log("PRICE", price)
        console.log("POINTS", points)
        if(e.target.checked==true)
        {
          if(quantity ==1)
          {
            var pricePerServ = parseFloat(price) / parseFloat(quantity)
            var computed_price = parseFloat(quantity) * parseFloat(pricePerServ)
            console.log("Computed Price", computed_price)
            $(`.newhalaga[id='${id}']`).val(computed_price)

            var pointsPerServ = parseFloat(points) / parseFloat(quantity)
            var computed_points = parseFloat(quantity) * parseFloat(pointsPerServ)
            $(`.newPointsEq[id='${id}']`).val(computed_points)
            $('#CurrentPoints').text("Current Points: "+computed_points)
            setTimeout(calculate)
          }
          else if(parseFloat(quantity) > parseFloat(1))
          {
            swal({
              title: "How many "+name+" will pay using points?",
              content: {
              element: "input",
              attributes: {
                type: "number",
                max: quantity,
              },
            },
            }).then(function(value){
              if(value != ''){
                $('.swal-content__input').attr('type', 'number')
                var value = $('.swal-content__input').val()
                console.log("VALUE", value)
                if(parseFloat(value) > parseFloat(quantity))
                {
                  swal({
                    title: "ERROR",
                    text: "The inputed number is invalid please try again",
                    icon: 'error'
                  }).then(function(){
                    e.target.checked=false
                  })
                }
                else
                {
                  var pricePerServ = parseFloat(price) / parseFloat(quantity)
                  var computed_price = parseFloat(value) * parseFloat(pricePerServ)
                  $(`.newhalaga[id='${id}']`).val(computed_price)

                  var pointsPerServ = parseFloat(points) / parseFloat(quantity)
                  var computed_points = parseFloat(value) * parseFloat(pointsPerServ)
                  $(`.newPointsEq[id='${id}']`).val(computed_points)
                  
                }

                if(value=='' || value==null)
                {
                  e.target.checked=false
                  $(`.newhalaga[id='${id}']`).val(0)
                  $(`.newPointsEq[id='${id}']`).val(0)
                }
                setTimeout(calculate)
              } else{

              }
            })
          }

        }
        else
        {
          if($('#checkbox_gc')[0].checked==true)
          {
            var id = $(this).val()
            var newPointsEq = $(`.newPointsEq[id='${id}']`).val()
            var newPoints = $('.newPoints').val()
            var newhalaga = $(`.newhalaga[id='${id}'`).val()
            var amountNeeded = $('.amountNeeded').val()
            var total = eval(amountNeeded+"+"+newhalaga)

            newhalaga -= parseFloat(newhalaga)
            $(`.newhalaga[id='${id}']`).val(newhalaga)
            $('.amountNeeded').val((total).toFixed(2))
            $('#AmountNeeded').text('₱'+(total).toFixed(2))

            var pointsTotal = eval(newPoints+'+'+newPointsEq)
            $('.newPoints').val(pointsTotal)
            newPointsEq -= parseFloat(newPointsEq)
            $(`.newPointsEq[id='${id}']`).val(newPointsEq)
          }
          else
          {
            var id = $(this).val()
            var newPointsEq = $(`.newPointsEq[id='${id}']`).val()
            var newPoints = $('.newPoints').val()
            var newhalaga = $(`.newhalaga[id='${id}'`).val()
            var amountNeeded = $('.amountNeeded').val()
            var total = eval(amountNeeded+"+"+newhalaga)

            newhalaga -= parseFloat(newhalaga)
            $(`.newhalaga[id='${id}']`).val(newhalaga)
            $('.amountNeeded').val((total).toFixed(2))
            $('#AmountNeeded').text('₱'+(total).toFixed(2))

            var pointsTotal = eval(newPoints+'+'+newPointsEq)
            $('.newPoints').val(pointsTotal)
            $('#CurrentPoints').text("Current Points: "+pointsTotal)
            newPointsEq -= parseFloat(newPointsEq)
            $(`.newPointsEq[id='${id}']`).val(newPointsEq)

          }
        }
      })
    })
script.
    function calculate(){
      var totalPrice = $('.totalPrice').val()
      var currentPoints = $('.currentPoints').val()
      var amountNeeded = $('.amountNeeded').val()
      var pointsTotal = 0;
      var priceTotal = 0;
      var newPrice
      var newPoints
      var newhalaga


      $(".checkboxPayment:checked").each(function(){
        var id = $(this).val()
        //- console.log($(`.newhalaga[id='${id}']`)[0].value)
        newhalaga = $(`.newhalaga[id='${id}']`).val()
        var newPointsEq = $(`.newPointsEq[id='${id}']`).val()

        if($('#checkbox_gc')[0].checked==true)
        {
          priceTotal = eval(newhalaga+"+"+priceTotal)
          newPrice = parseFloat(amountNeeded) - parseFloat(priceTotal)
          pointsTotal = eval(newPointsEq+'+'+pointsTotal)
          newPoints = parseFloat(currentPoints) - parseFloat(pointsTotal)
        }
        else
        {
          priceTotal = eval(newhalaga+"+"+priceTotal)
          newPrice = parseFloat(totalPrice) - parseFloat(priceTotal)
          pointsTotal = eval(newPointsEq+'+'+pointsTotal)
          newPoints = parseFloat(currentPoints) - parseFloat(pointsTotal)
        }
      })
        $('.newPoints').val(newPoints)
        $('#CurrentPoints').text("Current Points: "+newPoints)
        $('.amountNeeded').val((newPrice).toFixed(2))
        $('#AmountNeeded').text('₱'+(newPrice).toFixed(2)+'')

    }
script.
 $(document).ready(function(){
    $("#id_label_multiple").select2();
 })
